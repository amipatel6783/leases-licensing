name: "Run Django unit tests"

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]
  workflow_dispatch:

jobs:
  run_tests:
    name: Run Django Tests
    runs-on: ubuntu-20.04
    #runs-on: ubuntu-latest
    env:
      DATABASE_URL: postgis://postgres:postgres@localhost:5432/postgres
      DEBIAN_FRONTEND: noninteractive
      DEBUG: True
      TZ: Australia/Perth
      EMAIL_HOST: "smtp"
      DEFAULT_FROM_EMAIL: 'no-reply@dbca.wa.gov.au'
      NOTIFICATION_EMAIL: 'this@that.com'
      NON_PROD_EMAIL: 'that@this.com'
      PRODUCTION_EMAIL: False
      EMAIL_INSTANCE: 'DEV'
      SECRET_KEY: "ThisisNotRealKey"
      SITE_PREFIX: 'wls-tst'
      SITE_DOMAIN: 'dbca.wa.gov.au'
      OSCAR_SHOP_NAME: 'Department of Biodiversity, Conservation and Attractions'
      BPAY_ALLOWED: False

    services:
      postgres:
        image: postgis/postgis:13-3.1-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: --mount type=tmpfs,destination=/var/lib/postgresql/data --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Install GDAL
        run: |
          # create .env
          touch .env
          sudo apt-add-repository --yes ppa:ubuntugis/ubuntugis-unstable
          sudo apt-get update
          sudo apt-get install --no-install-recommends --yes gdal-bin libgdal-dev

      - name: Install Poetry
        uses: snok/install-poetry@v1.2.0
        with:
          version: 1.1.13
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: poetry install
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'

      - name: Run tests
        run: |
            poetry shell
            ./apply_initial_migrations.sh
            python manage.py collectstatic --no-input &&
            python manage.py check
            #python manage.py test wildlifecompliance/tests
